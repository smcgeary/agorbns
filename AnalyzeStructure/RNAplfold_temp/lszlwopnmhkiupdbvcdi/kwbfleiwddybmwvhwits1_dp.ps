%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Aug 26 17:37:15 2019
%%Title: RNA Dot Plot
%%BoundingBox: 66 530 520 650
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

%%EndProlog

/DPtitle {
  (kwbfleiwddybmwvhwits1)
} def

/sequence { (\
GGGCAGAGUUCUACAGUCCGACGAUCUAUAUAUCUCAGAAUACCGAUGGAUAACAUUCCAAAGUCGUAUGCCGUCUUCUGCUUG\
) } def
/len { sequence length } bind def

/winSize 84 def
292 416 translate
72 6 mul len 1 add winSize add 2 sqrt mul div dup scale
/Helvetica findfont 0.95 scalefont setfont

/drawseq_turn {
% print sequence at bottom
   gsave
   len 2 sqrt div dup neg 0.28 add exch 0.78 sub translate
    0 1 len 1 sub {
     dup dup 2 sqrt mul 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
} bind def
/drawgrid_turn{
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {    %for (0, gridspacing, len) 
     dup dup      %duplicate what - gridspacing??
     dup len exch sub moveto     %moveto diagonal?
     dup winSize gt
     {dup dup len exch sub winSize add lineto}
     {dup len lineto}ifelse
     dup len exch sub moveto  %moveto diagonal?
     dup len winSize sub le
     {dup dup len exch sub dup winSize exch sub len add exch lineto}
     {dup dup len exch sub len exch lineto}ifelse
     stroke pop pop
  } for
  len log 0.9 sub cvi 10 exch exp  % grid spacing
      dup 1 gt {
          dup dup 20 div dup 2 array astore exch 40 div setdash
      } { [0.3 0.7] 0.1 setdash } ifelse
      0 exch len {    %for (0, gridspacing, len) 
     dup dup      %duplicate what - gridspacing??
     dup len exch sub moveto     %moveto diagonal?
     len exch sub 0.7 sub exch 0.7 sub exch lineto
     stroke
   }for
 winSize len moveto  len winSize  lineto stroke
  [] 0 setdash
  0.04 setlinewidth 
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
   stroke
  } if
  0.5 neg dup translate
} bind def
0.5 dup translate
drawseq_turn
45 rotate


%draw the grid
drawgrid_turn

%start of base pair probability data
1 83 0.8154 ubox
2 82 0.9789 ubox
3 81 0.9982 ubox
4 80 0.9984 ubox
5 79 0.9981 ubox
6 78 0.9979 ubox
7 76 0.1873 ubox
7 77 0.9736 ubox
8 41 0.1010 ubox
8 75 0.2635 ubox
8 76 0.8633 ubox
9 40 0.1078 ubox
10 39 0.1129 ubox
11 38 0.1134 ubox
11 73 0.6848 ubox
12 37 0.1107 ubox
13 74 0.2722 ubox
14 70 0.7383 ubox
14 73 0.2796 ubox
15 69 0.7227 ubox
16 69 0.4296 ubox
16 71 0.2806 ubox
17 39 0.2026 ubox
17 68 0.4609 ubox
17 70 0.2722 ubox
18 38 0.2175 ubox
18 66 0.2015 ubox
19 66 0.8704 ubox
20 36 0.2700 ubox
20 65 0.8978 ubox
20 75 0.2543 ubox
21 35 0.2693 ubox
21 64 0.8975 ubox
21 67 0.1450 ubox
21 74 0.2546 ubox
22 63 0.8957 ubox
22 66 0.1479 ubox
22 73 0.2546 ubox
23 34 0.6674 ubox
23 36 0.1114 ubox
23 65 0.1479 ubox
23 72 0.2485 ubox
24 33 0.6664 ubox
24 35 0.1065 ubox
24 47 0.2825 ubox
24 64 0.1457 ubox
25 32 0.6169 ubox
25 39 0.2862 ubox
25 46 0.3269 ubox
25 63 0.1185 ubox
26 38 0.3089 ubox
26 45 0.3354 ubox
27 37 0.2988 ubox
27 70 0.1146 ubox
28 56 0.1239 ubox
28 69 0.1194 ubox
29 42 0.3249 ubox
29 55 0.1206 ubox
29 68 0.1196 ubox
30 41 0.3313 ubox
30 67 0.1187 ubox
31 40 0.3282 ubox
31 42 0.1086 ubox
31 52 0.2708 ubox
31 66 0.1012 ubox
32 41 0.1160 ubox
32 47 0.1180 ubox
32 51 0.2843 ubox
33 39 0.1789 ubox
33 40 0.1076 ubox
33 46 0.1452 ubox
33 50 0.2858 ubox
34 38 0.1840 ubox
34 45 0.1499 ubox
34 49 0.2847 ubox
35 46 0.4546 ubox
35 48 0.1657 ubox
36 45 0.4898 ubox
36 48 0.2138 ubox
37 47 0.2121 ubox
38 43 0.2113 ubox
38 44 0.2131 ubox
38 71 0.1066 ubox
40 69 0.2799 ubox
41 68 0.2959 ubox
42 67 0.2970 ubox
43 66 0.2254 ubox
44 63 0.1124 ubox
44 66 0.2488 ubox
45 65 0.3183 ubox
45 75 0.1717 ubox
46 64 0.3172 ubox
46 74 0.1720 ubox
47 60 0.7829 ubox
47 63 0.2043 ubox
47 73 0.1719 ubox
48 59 0.9325 ubox
48 72 0.1720 ubox
49 58 0.9329 ubox
49 71 0.1719 ubox
50 57 0.9196 ubox
50 69 0.1237 ubox
51 68 0.1240 ubox
52 67 0.1111 ubox
53 67 0.1102 ubox
54 66 0.1214 ubox
55 64 0.1092 ubox
56 63 0.1101 ubox
showpage
end
%%EOF
